rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {

    // Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null &&
             firestore.exists("/databases/(default)/documents/admins/" + request.auth.uid);
    }

    // Profile pictures
    match /profiles/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null;
      allow read, write: if isAdmin();
    }

    // Verification documents
    match /verifications/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if isAdmin();
    }

    // Chat media/attachments
    match /messages/{userId}/{allPaths=**} {
      allow write: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null;
      allow read, write: if isAdmin();
    }

    // Date photos/evidence
    match /dates/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if isAdmin();
    }

    // Report attachments
    match /reports/{userId}/{allPaths=**} {
      allow write: if request.auth != null && request.auth.uid == userId;
      allow read: if isAdmin();
    }

    // App assets (admin managed)
    match /app/{allPaths=**} {
      allow read: if true;
      allow write: if isAdmin();
    }
  }
}
